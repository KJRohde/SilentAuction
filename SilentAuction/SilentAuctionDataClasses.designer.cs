#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SilentAuction
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-SilentAuction-20190925081128")]
	public partial class SilentAuctionDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblAuctionPrize(tblAuctionPrize instance);
    partial void UpdatetblAuctionPrize(tblAuctionPrize instance);
    partial void DeletetblAuctionPrize(tblAuctionPrize instance);
    partial void InserttblRafflePrize(tblRafflePrize instance);
    partial void UpdatetblRafflePrize(tblRafflePrize instance);
    partial void DeletetblRafflePrize(tblRafflePrize instance);
    #endregion
		
		public SilentAuctionDataClassesDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SilentAuctionDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SilentAuctionDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SilentAuctionDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SilentAuctionDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblAuctionPrize> tblAuctionPrizes
		{
			get
			{
				return this.GetTable<tblAuctionPrize>();
			}
		}
		
		public System.Data.Linq.Table<tblRafflePrize> tblRafflePrizes
		{
			get
			{
				return this.GetTable<tblRafflePrize>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblAuctionPrizes")]
	public partial class tblAuctionPrize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AuctionPrizeId;
		
		private double _ActualValue;
		
		private double _MinimumBid;
		
		private double _BidIncrement;
		
		private double _CurrentBid;
		
		private string _Description;
		
		private string _Picture;
		
		private System.Nullable<int> _TopParticipant;
		
		private string _Category;
		
		private System.Nullable<int> _WinnerId;
		
		private int _AuctionId;
		
		private string _ImagePath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAuctionPrizeIdChanging(int value);
    partial void OnAuctionPrizeIdChanged();
    partial void OnActualValueChanging(double value);
    partial void OnActualValueChanged();
    partial void OnMinimumBidChanging(double value);
    partial void OnMinimumBidChanged();
    partial void OnBidIncrementChanging(double value);
    partial void OnBidIncrementChanged();
    partial void OnCurrentBidChanging(double value);
    partial void OnCurrentBidChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnPictureChanging(string value);
    partial void OnPictureChanged();
    partial void OnTopParticipantChanging(System.Nullable<int> value);
    partial void OnTopParticipantChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnWinnerIdChanging(System.Nullable<int> value);
    partial void OnWinnerIdChanged();
    partial void OnAuctionIdChanging(int value);
    partial void OnAuctionIdChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    #endregion
		
		public tblAuctionPrize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionPrizeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AuctionPrizeId
		{
			get
			{
				return this._AuctionPrizeId;
			}
			set
			{
				if ((this._AuctionPrizeId != value))
				{
					this.OnAuctionPrizeIdChanging(value);
					this.SendPropertyChanging();
					this._AuctionPrizeId = value;
					this.SendPropertyChanged("AuctionPrizeId");
					this.OnAuctionPrizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActualValue", DbType="Float NOT NULL")]
		public double ActualValue
		{
			get
			{
				return this._ActualValue;
			}
			set
			{
				if ((this._ActualValue != value))
				{
					this.OnActualValueChanging(value);
					this.SendPropertyChanging();
					this._ActualValue = value;
					this.SendPropertyChanged("ActualValue");
					this.OnActualValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinimumBid", DbType="Float NOT NULL")]
		public double MinimumBid
		{
			get
			{
				return this._MinimumBid;
			}
			set
			{
				if ((this._MinimumBid != value))
				{
					this.OnMinimumBidChanging(value);
					this.SendPropertyChanging();
					this._MinimumBid = value;
					this.SendPropertyChanged("MinimumBid");
					this.OnMinimumBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BidIncrement", DbType="Float NOT NULL")]
		public double BidIncrement
		{
			get
			{
				return this._BidIncrement;
			}
			set
			{
				if ((this._BidIncrement != value))
				{
					this.OnBidIncrementChanging(value);
					this.SendPropertyChanging();
					this._BidIncrement = value;
					this.SendPropertyChanged("BidIncrement");
					this.OnBidIncrementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentBid", DbType="Float NOT NULL")]
		public double CurrentBid
		{
			get
			{
				return this._CurrentBid;
			}
			set
			{
				if ((this._CurrentBid != value))
				{
					this.OnCurrentBidChanging(value);
					this.SendPropertyChanging();
					this._CurrentBid = value;
					this.SendPropertyChanged("CurrentBid");
					this.OnCurrentBidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Picture", DbType="NVarChar(MAX)")]
		public string Picture
		{
			get
			{
				return this._Picture;
			}
			set
			{
				if ((this._Picture != value))
				{
					this.OnPictureChanging(value);
					this.SendPropertyChanging();
					this._Picture = value;
					this.SendPropertyChanged("Picture");
					this.OnPictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TopParticipant", DbType="Int")]
		public System.Nullable<int> TopParticipant
		{
			get
			{
				return this._TopParticipant;
			}
			set
			{
				if ((this._TopParticipant != value))
				{
					this.OnTopParticipantChanging(value);
					this.SendPropertyChanging();
					this._TopParticipant = value;
					this.SendPropertyChanged("TopParticipant");
					this.OnTopParticipantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(MAX)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerId", DbType="Int")]
		public System.Nullable<int> WinnerId
		{
			get
			{
				return this._WinnerId;
			}
			set
			{
				if ((this._WinnerId != value))
				{
					this.OnWinnerIdChanging(value);
					this.SendPropertyChanging();
					this._WinnerId = value;
					this.SendPropertyChanged("WinnerId");
					this.OnWinnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuctionId", DbType="Int NOT NULL")]
		public int AuctionId
		{
			get
			{
				return this._AuctionId;
			}
			set
			{
				if ((this._AuctionId != value))
				{
					this.OnAuctionIdChanging(value);
					this.SendPropertyChanging();
					this._AuctionId = value;
					this.SendPropertyChanged("AuctionId");
					this.OnAuctionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblRafflePrizes")]
	public partial class tblRafflePrize : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _RafflePrizeId;
		
		private int _RaffleId;
		
		private double _Value;
		
		private string _Description;
		
		private string _ImagePath;
		
		private System.Nullable<int> _WinnerId;
		
		private int _CurrentTickets;
		
		private string _Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRafflePrizeIdChanging(int value);
    partial void OnRafflePrizeIdChanged();
    partial void OnRaffleIdChanging(int value);
    partial void OnRaffleIdChanged();
    partial void OnValueChanging(double value);
    partial void OnValueChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnWinnerIdChanging(System.Nullable<int> value);
    partial void OnWinnerIdChanged();
    partial void OnCurrentTicketsChanging(int value);
    partial void OnCurrentTicketsChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    #endregion
		
		public tblRafflePrize()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RafflePrizeId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int RafflePrizeId
		{
			get
			{
				return this._RafflePrizeId;
			}
			set
			{
				if ((this._RafflePrizeId != value))
				{
					this.OnRafflePrizeIdChanging(value);
					this.SendPropertyChanging();
					this._RafflePrizeId = value;
					this.SendPropertyChanged("RafflePrizeId");
					this.OnRafflePrizeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RaffleId", DbType="Int NOT NULL")]
		public int RaffleId
		{
			get
			{
				return this._RaffleId;
			}
			set
			{
				if ((this._RaffleId != value))
				{
					this.OnRaffleIdChanging(value);
					this.SendPropertyChanging();
					this._RaffleId = value;
					this.SendPropertyChanged("RaffleId");
					this.OnRaffleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Value", DbType="Float NOT NULL")]
		public double Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NVarChar(MAX)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WinnerId", DbType="Int")]
		public System.Nullable<int> WinnerId
		{
			get
			{
				return this._WinnerId;
			}
			set
			{
				if ((this._WinnerId != value))
				{
					this.OnWinnerIdChanging(value);
					this.SendPropertyChanging();
					this._WinnerId = value;
					this.SendPropertyChanged("WinnerId");
					this.OnWinnerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CurrentTickets", DbType="Int NOT NULL")]
		public int CurrentTickets
		{
			get
			{
				return this._CurrentTickets;
			}
			set
			{
				if ((this._CurrentTickets != value))
				{
					this.OnCurrentTicketsChanging(value);
					this.SendPropertyChanging();
					this._CurrentTickets = value;
					this.SendPropertyChanged("CurrentTickets");
					this.OnCurrentTicketsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(MAX)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
